version:               2

jobs:

  dependencyUpdates:

    docker:
      - image:         circleci/android:api-28-node8-alpha

    environment:
      JVM_OPTS:        -Xmx2048m
      GRADLE_OPTS:     -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-


      # dependencyUpdates
      - run:
          name:        Checking dependency updates
          command:     ./gradlew androidDependencies dependencyUpdates --profile
      - store_artifacts:
          path:        build/reports/profile/
          destination: profile
      - store_artifacts:
          path:        build/dependencyUpdates
          destination: dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key:         v1-dependencies-{{ checksum "build.gradle" }}


  lint:

    docker:
      - image:         circleci/android:api-28-node8-alpha

    environment:
      JVM_OPTS:        -Xmx2048m
      GRADLE_OPTS:     -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-


      # :features:dashboard
      - run:
          name:        Running :features:dashboard:lint
          command:     ./gradlew :features:dashboard:lint --profile
      - store_artifacts:
          path:        build/reports/profile/
          destination: features/dashboard
      - store_artifacts:
          path:        features/dashboard/build/reports/
          destination: features/dashboard

      # :features:home
      - run:
          name:        Running :features:home:lint
          command:     ./gradlew :features:home:lint --profile
      - store_artifacts:
          path:        build/reports/profile/
          destination: features/home
      - store_artifacts:
          path:        features/home/build/reports/
          destination: features/home

      # :features:user
      - run:
          name:        Running :features:user:lint
          command:     ./gradlew :features:user:lint --profile
      - store_artifacts:
          path:        build/reports/profile/
          destination: features/user
      - store_artifacts:
          path:        features/user/build/reports/
          destination: features/user

      # :libraries:di-components
      - run:
          name:        Running :libraries:di-components:lint
          command:     ./gradlew :libraries:di-components:lint --profile
      - store_artifacts:
          path:        build/reports/profile/
          destination: di-components
      - store_artifacts:
          path:        libraries/di-components/build/reports/
          destination: di-components

      # :libraries:ui-components
      - run:
          name:        Running :libraries:ui-components:lint
          command:     ./gradlew :libraries:ui-components:lint --profile
      - store_artifacts:
          path:        build/reports/profile/
          destination: ui-components
      - store_artifacts:
          path:        libraries/ui-components/build/reports/
          destination: ui-components

      # :zendoo
      - run:
          name:        Running lint
          command:     ./gradlew :zendoo:lint --profile
      - store_artifacts:
          path:        build/reports/profile/
          destination: zendoo
      - store_artifacts:
          path:        zendoo/build/reports/
          destination: zendoo
          
  ktlint:

    docker:
      - image:         circleci/android:api-28-node8-alpha

    environment:
      JVM_OPTS:        -Xmx2048m
      GRADLE_OPTS:     -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-


      # ktlint
      - run:
          name:        Running ktlintCheck
          command:     ./gradlew --continue ktlintCheck --profile
      - store_artifacts:
          path:        build/reports/profile/
          destination: profile
      - store_artifacts:
          path:        zendoo/build/reports/ktlint
          destination: app

          
      - store_artifacts:
          path:        features/dashboard/build/reports/ktlint
          destination: dashboard
      - store_artifacts:
          path:        features/home/build/reports/ktlint
          destination: home
      - store_artifacts:
          path:        features/user/build/reports/ktlint
          destination: user
      - store_artifacts:
          path:        libraries/ui-components/build/reports/ktlint
          destination: ui-components

  detekt:

    docker:
      - image:         circleci/android:api-28-node8-alpha

    environment:
      JVM_OPTS:        -Xmx2048m
      GRADLE_OPTS:     -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-


      # detekt
      - run:
          name:        Running detekt
          command:     ./gradlew detekt --profile
      - store_artifacts:
          path:        build/reports/profile/
          destination: profile
      - store_artifacts:
          path:        zendoo/build/reports/detekt
          destination: zendoo
      - store_artifacts:
          path:        features/dashboard/build/reports/detekt
          destination: dashboard
      - store_artifacts:
          path:        features/home/build/reports/detekt
          destination: home
      - store_artifacts:
          path:        features/user/build/reports/detekt
          destination: user
      - store_artifacts:
          path:        libraries/ui-components/build/reports/detekt
          destination: ui-components

  coverage:

    docker:
      - image:         circleci/android:api-28-node8-alpha

    environment:
      JVM_OPTS:        -Xmx2048m
      GRADLE_OPTS:     -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-


      # coverage
      - run:
          name:        Running jacocoTestReportDebug jacocoTestReportMerged
          command:     |
            ./gradlew jacocoTestReportRelease
            ./gradlew jacocoTestReportMerged
      - store_artifacts:
          path:        build/reports/profile/
          destination: profile
      - store_artifacts:
          path:        build/reports/jacoco
          destination: jacoco
      - store_artifacts:
          path:        zendoo/build/reports/tests
          destination: unit/zendoo
      - store_artifacts:
          path:        features/dashboard/build/reports/tests
          destination: unit/dashboard
      - store_artifacts:
          path:        features/home/build/reports/tests
          destination: unit/home
      - store_artifacts:
          path:        features/user/build/reports/tests
          destination: unit/user
      - store_artifacts:
          path:        libraries/ui-components/build/reports/tests
          destination: ui-components

      - run:
          name:        Save test results
          command:     |
            mkdir -p ~/reports/xml/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/reports/xml/ \;
      - store_test_results:
          path:        ~/reports/xml
      - store_artifacts:
          path:        ~/reports/xml
          destination: junit

  robo:
    docker:
      - image:         circleci/android:api-28-node8-alpha

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum ".dependencies/dependencies.gradle" }}
            - v1-dependencies-

      - run:
          name:        Downloading dependencies
          command:     ./gradlew androidDependencies


      # robo
      - run:
          name:        Authorize gcloud and set config defaults
          command:     |
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            sudo gcloud auth activate-service-account ${FIREBASE_SERVICE_ACCOUNT} --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud config set account ${FIREBASE_SERVICE_ACCOUNT}
      - run:
          name:        Build debug APK and release APK
          command:     |
            ./gradlew :application-test:assembleDebug
            ./gradlew :application-test:assembleDebugAndroidTest
      - run:
          name:        Test with Firebase Test Lab
          command:     sudo gcloud firebase test android run
            --type robo
            --app application-test/build/outputs/apk/debug/application-test-debug.apk
            --device model=star2qlteue,version=26,locale=de,orientation=portrait
            --timeout 90s
          # --results-bucket cloud-test-${GOOGLE_PROJECT_ID}
          # --timeout 90s


  assemble:

    docker:
      - image:         circleci/android:api-28-node8-alpha

    environment:
      JVM_OPTS:        -Xmx2048m
      GRADLE_OPTS:     -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-


      # assemble
      - run:           |
          ./gradlew assembleDebug
          ./gradlew assembleDebug

      - store_artifacts:
          path:        zendoo/build/outputs/apk/debug/
          destination: debug

      - store_artifacts:
          path:        zendoo/build/outputs/apk/release/
          destination: release


workflows:
  version:             2
  pull_request:
    jobs:
      - dependencyUpdates:
          filters:
            branches:
              ignore:
                - master
      - lint:
          requires:
            - dependencyUpdates
      - ktlint:
          requires:
            - dependencyUpdates
      - detekt:
          requires:
            - dependencyUpdates
      - coverage:
          requires:
            - dependencyUpdates
      - assemble:
          requires:
            - coverage
            - detekt
            - ktlint
            - lint

  release:
    jobs:
      - assemble:
          filters:
            branches:
              only:
                - master
